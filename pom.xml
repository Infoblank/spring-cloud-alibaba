<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.ztt</groupId>
    <artifactId>spring-cloud-alibaba</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>spring-cloud-alibaba</name>
    <description>spring-cloud-alibaba</description>
    <packaging>pom</packaging>
    <modules>
        <module>cloud-provider</module>
        <module>cloud-consumer</module>
        <module>cloud-api</module>
        <module>cloud-common</module>
        <module>cloud-dao</module>
        <module>cloud-minio</module>
        <module>cloud-shiro-sso</module>
        <module>spring-boot-webflux</module>
        <module>cloud-gateway</module>
        <module>cloud-redis</module>
    </modules>
    <properties>
        <java.version>17</java.version>
        <project.encoding>UTF-8</project.encoding>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <spring.boot.version>2.6.8</spring.boot.version>
        <spring.cloud.alibaba.version>2021.0.1.0</spring.cloud.alibaba.version>
        <spring.cloud.version>2021.0.1</spring.cloud.version>
        <spring.cloud.durid.version>1.2.4</spring.cloud.durid.version>
        <spring.cloud.loadbalancer.version>3.1.2</spring.cloud.loadbalancer.version>
        <spring.cloud.mybatis.plus.version>3.4.3</spring.cloud.mybatis.plus.version>
        <spring.cloud.satoken.version>1.28.0</spring.cloud.satoken.version>
        <spring.cloud.postgresql.version>42.3.1</spring.cloud.postgresql.version>
        <spring.boot.hutool.version>5.7.14</spring.boot.hutool.version>
        <jasypt.version>3.0.4</jasypt.version>
        <java.jwt.version>3.19.2</java.jwt.version>
        <shiro.spring.version>1.9.0</shiro.spring.version>
        <jnanoid.version>2.0.0</jnanoid.version>
        <transmittable.thread.local.version>2.13.2</transmittable.thread.local.version>
        <clou.ztt.version>0.0.1-SNAPSHOT</clou.ztt.version>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework.cloud</groupId>
                        <artifactId>spring-cloud-starter-netflix-ribbon</artifactId>
                    </exclusion>
                </exclusions>
                <version>${spring.cloud.alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <scope>import</scope>
                <type>pom</type>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring.cloud.version}</version>
            </dependency>
            <!-- 负载均很策略 -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-loadbalancer</artifactId>
                <version>${spring.cloud.loadbalancer.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--ORM框架-->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${spring.cloud.mybatis.plus.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- 缓存 -->
            <dependency>
                <groupId>com.github.ben-manes.caffeine</groupId>
                <artifactId>caffeine</artifactId>
                <version>2.8.1</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--阿里巴巴的druid连接池-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${spring.cloud.durid.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--sa-token 鉴权-->
            <dependency>
                <groupId>cn.dev33</groupId>
                <artifactId>sa-token-spring-boot-starter</artifactId>
                <version>${spring.cloud.satoken.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--sa-token与jwt集成-->
            <dependency>
                <groupId>cn.dev33</groupId>
                <artifactId>sa-token-jwt</artifactId>
                <version>${spring.cloud.satoken.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.postgresql/postgresql -->
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${spring.cloud.postgresql.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${spring.boot.hutool.version}</version>
                <type>jar</type>
                <scope>import</scope>
            </dependency>
            <!-- 加密配置文件,但是只解密一次 nacos动态加载后无法解密已经加密的选项 可以自己实现在读取了nacos配置后再解密一次 -->
            <dependency>
                <groupId>com.github.ulisesbocchio</groupId>
                <artifactId>jasypt-spring-boot-starter</artifactId>
                <version>${jasypt.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- 线程池的线程获取来自父线程的变量 -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>transmittable-thread-local</artifactId>
                <version>${transmittable.thread.local.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.encoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring.boot.version}</version>
                <configuration>
                    <mainClass>com.ztt.springcloudalibaba.SpringCloudAlibabaApplication</mainClass>
                </configuration>
                <executions>
                    <execution>
                        <id>repackage</id>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
